---
import iso from '../assets/iso.gif';
import service from '../assets/service.gif';
import customer from '../assets/1000.gif';
import years from '../assets/2Years.gif';
import skilled from '../assets/600skilled.gif';
import earth from '../assets/earth.gif';

const reasons = [
  {
    title: 'Industry Experience',
    description:
      'Access your workspace from anywhere with fully responsive design optimized for all devices.',
    pic: customer,
  },
  {
    title: 'Customers Across Sri Lanka',
    description:
      'Access your workspace from anywhere with fully responsive design optimized for all devices.',
    pic: years,
  },
  {
    title: 'fertilizer',
    description:
      'Access your workspace from anywhere with fully responsive design optimized for all devices.',
    pic: skilled,
  },
  {
    title: 'fertilizer',
    description:
      'Access your workspace from anywhere with fully responsive design optimized for all devices.',
    pic: iso,
  },
  {
    title: 'fertilizer',
    description:
      'Access your workspace from anywhere with fully responsive design optimized for all devices.',
    pic: earth,
  },

  {
    title: 'fertilizer',
    description:
      'Access your workspace from anywhere with fully responsive design optimized for all devices.',
    pic: service,
  },
];
---

<section id='choose-us' class='section bg-blue-50'>
  <div class='container-custom'>
    <div class='text-center max-w-3xl mx-auto mb-16'>
      <h2 class='mb-5 text-gray-900 dark:text-white'>Why Choose Us</h2>
    </div>

    <div class='grid md:grid-cols-3 lg:grid-cols-6 gap-10'>
      {
        reasons.map((reason, index) => (
          <div class='feature-card group bg-red-700 perspective h-60'>
            <div class='relative h-full  transform-gpu transition-all duration-700 preserve-3d hover:rotate-y-180 cursor-pointer touch-action-card'>
              <div class='absolute inset-0 backface-hidden'>
                <div class='h-full flex flex-col items-center justify-center text-center'>
                  <img class='w-50 md:w-60' src={reason.pic.src} alt='' />
                  {/* <h3 class=' capitalize text-xl font-semibold mb-3 text-gray-900 dark:text-white'>
                    {reason.title}
                  </h3> */}
                </div>
              </div>
              <div class='absolute inset-0 backface-hidden rotate-y-180'>
                <div class='card p-6 md:p-8 h-full bg-white dark:bg-primary-800 text-white flex flex-col items-center justify-center text-center'>
                  <p class='mb-4 text-sm font-semibold text-black'>
                    Our 3D transformations use CSS perspective and transform
                    properties to create immersive experiences.
                  </p>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>
<style>
  /* 3D Card Transformations */
  .perspective {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .rotate-y-180 {
    transform: rotateY(180deg);
  }

  /* Touch device support for 3D cards */
  @media (hover: none) {
    .touch-action-card {
      transition: none;
    }

    .touch-action-card:active {
      transform: rotateY(180deg);
    }
  }

  @media (hover: none) {
    .touch-action-card {
      transition: transform 0.5s ease;
    }
  }
</style>
<script>
  // Store references to event listeners for cleanup
  const cleanupFunctions: Array<() => void> = [];

  // Add touch support for 3D cards
  function initializeTouchCards() {
    const cards = document.querySelectorAll('.feature-card.perspective');

    cards.forEach((card) => {
      const cardInner = card.querySelector('.preserve-3d');

      if (cardInner) {
        // 使用点击事件而不是touchstart，这样更可靠
        const handleClick = () => {
          if (window.matchMedia('(hover: none)').matches) {
            cardInner.classList.toggle('rotate-y-180');
          }
        };

        cardInner.addEventListener('click', handleClick);

        // Add cleanup function
        cleanupFunctions.push(() => {
          if (cardInner) {
            cardInner.removeEventListener('click', handleClick);
          }
        });
      }
    });
  }

  // Cleanup when page is unloaded or before navigation
  document.addEventListener('astro:before-swap', () => {
    // Execute all cleanup functions
    cleanupFunctions.forEach((cleanup) => cleanup());
    // Clear the array
    cleanupFunctions.length = 0;
  });

  // Also clean up on window unload as a fallback
  window.addEventListener('unload', () => {
    cleanupFunctions.forEach((cleanup) => cleanup());
  });
</script>
